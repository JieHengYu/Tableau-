<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1227.1336                               -->
<workbook original-version='18.1' source-build='2023.3.1 (20233.23.1227.1336)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Union (US Tree Nut Production)' inline='true' name='federated.01x01bi0nc71p811nk1fc159khrp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='US Tree Nut Production' name='excel-direct.0ata9je0g46cm816u7tld0n7mvsi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/yuj22/Desktop/Tableau Fundamentals/Work with Multiple Data Sources/Using Unions to Combine Data/US Tree Nut Production.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation type='project'>
          <columns>
            <column caption='Yield per acre (pounds)' hidden='true' name='[Almonds+].[Yield per acre (pounds)]' />
            <column caption='YPA in pounds' hidden='true' name='[Almonds+].[YPA in pounds]' />
            <column name='[Project].[Yield per acre (pounds) &amp; YPA in pounds]' project-type='coalesce' />
          </columns>
          <bindings>
            <binding expression='IF NOT ISNULL([Almonds+].[Yield per acre (pounds)]) THEN [Almonds+].[Yield per acre (pounds)]&#10;ELSEIF NOT ISNULL([Almonds+].[YPA in pounds]) THEN [Almonds+].[YPA in pounds]&#10;ELSE NULL&#10;END' name='[Project].[Yield per acre (pounds) &amp; YPA in pounds]' />
          </bindings>
          <relation all='true' name='Almonds+' type='union'>
            <columns header='yes'>
              <column datatype='date' name='Year' />
              <column datatype='integer' name='Bearing acreage (acres)' />
              <column datatype='integer' name='Yield per acre (pounds)' />
              <column datatype='integer' name='Production (1,000 pounds)' />
              <column datatype='real' name='Grower price (Cents/pound)' />
              <column datatype='integer' name='Value  ($1,000)' />
              <column datatype='integer' name='YPA in pounds' />
              <column datatype='string' name='Sheet' />
              <column datatype='string' name='Table Name' />
            </columns>
            <relation connection='excel-direct.0ata9je0g46cm816u7tld0n7mvsi' name='Almonds' table='[Almonds$]' type='table'>
              <columns gridOrigin='A1:F26:no:A1:F26:0' header='yes' outcome='2'>
                <column datatype='date' name='Year' ordinal='0' />
                <column datatype='integer' name='Bearing acreage (acres)' ordinal='1' />
                <column datatype='integer' name='Yield per acre (pounds)' ordinal='2' />
                <column datatype='integer' name='Production (1,000 pounds)' ordinal='3' />
                <column datatype='integer' name='Grower price (Cents/pound)' ordinal='4' />
                <column datatype='integer' name='Value  ($1,000)' ordinal='5' />
              </columns>
            </relation>
            <relation connection='excel-direct.0ata9je0g46cm816u7tld0n7mvsi' name='Hazelnuts' table='[Hazelnuts$]' type='table'>
              <columns gridOrigin='A1:C26:no:A1:C26:0' header='yes' outcome='2'>
                <column datatype='date' name='Year' ordinal='0' />
                <column datatype='integer' name='Bearing acreage (acres)' ordinal='1' />
                <column datatype='integer' name='YPA in pounds' ordinal='2' />
              </columns>
            </relation>
            <relation connection='excel-direct.0ata9je0g46cm816u7tld0n7mvsi' name='Macadamias ' table='[&apos;Macadamias $&apos;]' type='table'>
              <columns gridOrigin='A1:F26:no:A1:F26:0' header='yes' outcome='2'>
                <column datatype='date' name='Year' ordinal='0' />
                <column datatype='integer' name='Bearing acreage (acres)' ordinal='1' />
                <column datatype='integer' name='Yield per acre (pounds)' ordinal='2' />
                <column datatype='integer' name='Production (1,000 pounds)' ordinal='3' />
                <column datatype='integer' name='Grower price (Cents/pound)' ordinal='4' />
                <column datatype='integer' name='Value  ($1,000)' ordinal='5' />
              </columns>
            </relation>
            <relation connection='excel-direct.0ata9je0g46cm816u7tld0n7mvsi' name='Pistachios ' table='[&apos;Pistachios $&apos;]' type='table'>
              <columns gridOrigin='A1:F26:no:A1:F26:0' header='yes' outcome='2'>
                <column datatype='date' name='Year' ordinal='0' />
                <column datatype='integer' name='Bearing acreage (acres)' ordinal='1' />
                <column datatype='integer' name='Yield per acre (pounds)' ordinal='2' />
                <column datatype='integer' name='Production (1,000 pounds)' ordinal='3' />
                <column datatype='real' name='Grower price (Cents/pound)' ordinal='4' />
                <column datatype='integer' name='Value  ($1,000)' ordinal='5' />
              </columns>
            </relation>
            <relation connection='excel-direct.0ata9je0g46cm816u7tld0n7mvsi' name='Walnuts ' table='[&apos;Walnuts $&apos;]' type='table'>
              <columns gridOrigin='A1:F26:no:A1:F26:0' header='yes' outcome='2'>
                <column datatype='date' name='Year' ordinal='0' />
                <column datatype='integer' name='Bearing acreage (acres)' ordinal='1' />
                <column datatype='integer' name='Yield per acre (pounds)' ordinal='2' />
                <column datatype='integer' name='Production (1,000 pounds)' ordinal='3' />
                <column datatype='integer' name='Grower price (Cents/pound)' ordinal='4' />
                <column datatype='integer' name='Value  ($1,000)' ordinal='5' />
              </columns>
            </relation>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='project'>
          <columns>
            <column caption='Yield per acre (pounds)' hidden='true' name='[Almonds+].[Yield per acre (pounds)]' />
            <column caption='YPA in pounds' hidden='true' name='[Almonds+].[YPA in pounds]' />
            <column name='[Project].[Yield per acre (pounds) &amp; YPA in pounds]' project-type='coalesce' />
          </columns>
          <bindings>
            <binding expression='IF NOT ISNULL([Almonds+].[Yield per acre (pounds)]) THEN [Almonds+].[Yield per acre (pounds)]&#10;ELSEIF NOT ISNULL([Almonds+].[YPA in pounds]) THEN [Almonds+].[YPA in pounds]&#10;ELSE NULL&#10;END' name='[Project].[Yield per acre (pounds) &amp; YPA in pounds]' />
          </bindings>
          <relation all='true' name='Almonds+' type='union'>
            <columns header='yes'>
              <column datatype='date' name='Year' />
              <column datatype='integer' name='Bearing acreage (acres)' />
              <column datatype='integer' name='Yield per acre (pounds)' />
              <column datatype='integer' name='Production (1,000 pounds)' />
              <column datatype='real' name='Grower price (Cents/pound)' />
              <column datatype='integer' name='Value  ($1,000)' />
              <column datatype='integer' name='YPA in pounds' />
              <column datatype='string' name='Sheet' />
              <column datatype='string' name='Table Name' />
            </columns>
            <relation connection='excel-direct.0ata9je0g46cm816u7tld0n7mvsi' name='Almonds' table='[Almonds$]' type='table'>
              <columns gridOrigin='A1:F26:no:A1:F26:0' header='yes' outcome='2'>
                <column datatype='date' name='Year' ordinal='0' />
                <column datatype='integer' name='Bearing acreage (acres)' ordinal='1' />
                <column datatype='integer' name='Yield per acre (pounds)' ordinal='2' />
                <column datatype='integer' name='Production (1,000 pounds)' ordinal='3' />
                <column datatype='integer' name='Grower price (Cents/pound)' ordinal='4' />
                <column datatype='integer' name='Value  ($1,000)' ordinal='5' />
              </columns>
            </relation>
            <relation connection='excel-direct.0ata9je0g46cm816u7tld0n7mvsi' name='Hazelnuts' table='[Hazelnuts$]' type='table'>
              <columns gridOrigin='A1:C26:no:A1:C26:0' header='yes' outcome='2'>
                <column datatype='date' name='Year' ordinal='0' />
                <column datatype='integer' name='Bearing acreage (acres)' ordinal='1' />
                <column datatype='integer' name='YPA in pounds' ordinal='2' />
              </columns>
            </relation>
            <relation connection='excel-direct.0ata9je0g46cm816u7tld0n7mvsi' name='Macadamias ' table='[&apos;Macadamias $&apos;]' type='table'>
              <columns gridOrigin='A1:F26:no:A1:F26:0' header='yes' outcome='2'>
                <column datatype='date' name='Year' ordinal='0' />
                <column datatype='integer' name='Bearing acreage (acres)' ordinal='1' />
                <column datatype='integer' name='Yield per acre (pounds)' ordinal='2' />
                <column datatype='integer' name='Production (1,000 pounds)' ordinal='3' />
                <column datatype='integer' name='Grower price (Cents/pound)' ordinal='4' />
                <column datatype='integer' name='Value  ($1,000)' ordinal='5' />
              </columns>
            </relation>
            <relation connection='excel-direct.0ata9je0g46cm816u7tld0n7mvsi' name='Pistachios ' table='[&apos;Pistachios $&apos;]' type='table'>
              <columns gridOrigin='A1:F26:no:A1:F26:0' header='yes' outcome='2'>
                <column datatype='date' name='Year' ordinal='0' />
                <column datatype='integer' name='Bearing acreage (acres)' ordinal='1' />
                <column datatype='integer' name='Yield per acre (pounds)' ordinal='2' />
                <column datatype='integer' name='Production (1,000 pounds)' ordinal='3' />
                <column datatype='real' name='Grower price (Cents/pound)' ordinal='4' />
                <column datatype='integer' name='Value  ($1,000)' ordinal='5' />
              </columns>
            </relation>
            <relation connection='excel-direct.0ata9je0g46cm816u7tld0n7mvsi' name='Walnuts ' table='[&apos;Walnuts $&apos;]' type='table'>
              <columns gridOrigin='A1:F26:no:A1:F26:0' header='yes' outcome='2'>
                <column datatype='date' name='Year' ordinal='0' />
                <column datatype='integer' name='Bearing acreage (acres)' ordinal='1' />
                <column datatype='integer' name='Yield per acre (pounds)' ordinal='2' />
                <column datatype='integer' name='Production (1,000 pounds)' ordinal='3' />
                <column datatype='integer' name='Grower price (Cents/pound)' ordinal='4' />
                <column datatype='integer' name='Value  ($1,000)' ordinal='5' />
              </columns>
            </relation>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Almonds+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Almonds+]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Almonds_59C3A0C55B6C491A921323519C9AD677]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Bearing acreage (acres)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Bearing acreage (acres)]</local-name>
            <parent-name>[Almonds+]</parent-name>
            <remote-alias>Bearing acreage (acres)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Almonds_59C3A0C55B6C491A921323519C9AD677]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Yield per acre (pounds) &amp; YPA in pounds</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Yield per acre (pounds) &amp; YPA in pounds]</local-name>
            <parent-name>[Project]</parent-name>
            <remote-alias>Yield per acre (pounds) &amp; YPA in pounds</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Almonds_59C3A0C55B6C491A921323519C9AD677]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Production (1,000 pounds)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Production (1,000 pounds)]</local-name>
            <parent-name>[Almonds+]</parent-name>
            <remote-alias>Production (1,000 pounds)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Almonds_59C3A0C55B6C491A921323519C9AD677]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Grower price (Cents/pound)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Grower price (Cents/pound)]</local-name>
            <parent-name>[Almonds+]</parent-name>
            <remote-alias>Grower price (Cents/pound)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Almonds_59C3A0C55B6C491A921323519C9AD677]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Value  ($1,000)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Value  ($1,000)]</local-name>
            <parent-name>[Almonds+]</parent-name>
            <remote-alias>Value  ($1,000)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Almonds_59C3A0C55B6C491A921323519C9AD677]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sheet</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Sheet]</local-name>
            <parent-name>[Almonds+]</parent-name>
            <remote-alias>Sheet</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Almonds_59C3A0C55B6C491A921323519C9AD677]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Almonds+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Almonds_59C3A0C55B6C491A921323519C9AD677]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Yield per acre (pounds)' datatype='integer' name='[Yield per acre (pounds) &amp; YPA in pounds]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Almonds' datatype='table' name='[__tableau_internal_object_id__].[Almonds_59C3A0C55B6C491A921323519C9AD677]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Almonds' id='Almonds_59C3A0C55B6C491A921323519C9AD677'>
            <properties context=''>
              <relation type='project'>
                <columns>
                  <column caption='Yield per acre (pounds)' hidden='true' name='[Almonds+].[Yield per acre (pounds)]' />
                  <column caption='YPA in pounds' hidden='true' name='[Almonds+].[YPA in pounds]' />
                  <column name='[Project].[Yield per acre (pounds) &amp; YPA in pounds]' project-type='coalesce' />
                </columns>
                <bindings>
                  <binding expression='IF NOT ISNULL([Almonds+].[Yield per acre (pounds)]) THEN [Almonds+].[Yield per acre (pounds)]&#10;ELSEIF NOT ISNULL([Almonds+].[YPA in pounds]) THEN [Almonds+].[YPA in pounds]&#10;ELSE NULL&#10;END' name='[Project].[Yield per acre (pounds) &amp; YPA in pounds]' />
                </bindings>
                <relation all='true' name='Almonds+' type='union'>
                  <columns header='yes'>
                    <column datatype='date' name='Year' />
                    <column datatype='integer' name='Bearing acreage (acres)' />
                    <column datatype='integer' name='Yield per acre (pounds)' />
                    <column datatype='integer' name='Production (1,000 pounds)' />
                    <column datatype='real' name='Grower price (Cents/pound)' />
                    <column datatype='integer' name='Value  ($1,000)' />
                    <column datatype='integer' name='YPA in pounds' />
                    <column datatype='string' name='Sheet' />
                    <column datatype='string' name='Table Name' />
                  </columns>
                  <relation connection='excel-direct.0ata9je0g46cm816u7tld0n7mvsi' name='Almonds' table='[Almonds$]' type='table'>
                    <columns gridOrigin='A1:F26:no:A1:F26:0' header='yes' outcome='2'>
                      <column datatype='date' name='Year' ordinal='0' />
                      <column datatype='integer' name='Bearing acreage (acres)' ordinal='1' />
                      <column datatype='integer' name='Yield per acre (pounds)' ordinal='2' />
                      <column datatype='integer' name='Production (1,000 pounds)' ordinal='3' />
                      <column datatype='integer' name='Grower price (Cents/pound)' ordinal='4' />
                      <column datatype='integer' name='Value  ($1,000)' ordinal='5' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.0ata9je0g46cm816u7tld0n7mvsi' name='Hazelnuts' table='[Hazelnuts$]' type='table'>
                    <columns gridOrigin='A1:C26:no:A1:C26:0' header='yes' outcome='2'>
                      <column datatype='date' name='Year' ordinal='0' />
                      <column datatype='integer' name='Bearing acreage (acres)' ordinal='1' />
                      <column datatype='integer' name='YPA in pounds' ordinal='2' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.0ata9je0g46cm816u7tld0n7mvsi' name='Macadamias ' table='[&apos;Macadamias $&apos;]' type='table'>
                    <columns gridOrigin='A1:F26:no:A1:F26:0' header='yes' outcome='2'>
                      <column datatype='date' name='Year' ordinal='0' />
                      <column datatype='integer' name='Bearing acreage (acres)' ordinal='1' />
                      <column datatype='integer' name='Yield per acre (pounds)' ordinal='2' />
                      <column datatype='integer' name='Production (1,000 pounds)' ordinal='3' />
                      <column datatype='integer' name='Grower price (Cents/pound)' ordinal='4' />
                      <column datatype='integer' name='Value  ($1,000)' ordinal='5' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.0ata9je0g46cm816u7tld0n7mvsi' name='Pistachios ' table='[&apos;Pistachios $&apos;]' type='table'>
                    <columns gridOrigin='A1:F26:no:A1:F26:0' header='yes' outcome='2'>
                      <column datatype='date' name='Year' ordinal='0' />
                      <column datatype='integer' name='Bearing acreage (acres)' ordinal='1' />
                      <column datatype='integer' name='Yield per acre (pounds)' ordinal='2' />
                      <column datatype='integer' name='Production (1,000 pounds)' ordinal='3' />
                      <column datatype='real' name='Grower price (Cents/pound)' ordinal='4' />
                      <column datatype='integer' name='Value  ($1,000)' ordinal='5' />
                    </columns>
                  </relation>
                  <relation connection='excel-direct.0ata9je0g46cm816u7tld0n7mvsi' name='Walnuts ' table='[&apos;Walnuts $&apos;]' type='table'>
                    <columns gridOrigin='A1:F26:no:A1:F26:0' header='yes' outcome='2'>
                      <column datatype='date' name='Year' ordinal='0' />
                      <column datatype='integer' name='Bearing acreage (acres)' ordinal='1' />
                      <column datatype='integer' name='Yield per acre (pounds)' ordinal='2' />
                      <column datatype='integer' name='Production (1,000 pounds)' ordinal='3' />
                      <column datatype='integer' name='Grower price (Cents/pound)' ordinal='4' />
                      <column datatype='integer' name='Value  ($1,000)' ordinal='5' />
                    </columns>
                  </relation>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Tree Nut Variety'>
      <table>
        <view>
          <datasources>
            <datasource caption='Union (US Tree Nut Production)' name='federated.01x01bi0nc71p811nk1fc159khrp' />
          </datasources>
          <datasource-dependencies datasource='federated.01x01bi0nc71p811nk1fc159khrp'>
            <column datatype='integer' name='[Bearing acreage (acres)]' role='measure' type='quantitative' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='date' name='[Year]' role='dimension' type='ordinal' />
            <column caption='Yield per acre (pounds)' datatype='integer' name='[Yield per acre (pounds) &amp; YPA in pounds]' role='measure' type='quantitative' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Bearing acreage (acres)]' derivation='Sum' name='[sum:Bearing acreage (acres):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Yield per acre (pounds) &amp; YPA in pounds]' derivation='Sum' name='[sum:Yield per acre (pounds) &amp; YPA in pounds:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Year]' derivation='Year' name='[yr:Year:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01x01bi0nc71p811nk1fc159khrp].[none:Table Name:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01x01bi0nc71p811nk1fc159khrp].[sum:Bearing acreage (acres):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01x01bi0nc71p811nk1fc159khrp].[none:Table Name:nk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01x01bi0nc71p811nk1fc159khrp].[sum:Yield per acre (pounds) &amp; YPA in pounds:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01x01bi0nc71p811nk1fc159khrp].[none:Table Name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.01x01bi0nc71p811nk1fc159khrp].[sum:Bearing acreage (acres):qk] + [federated.01x01bi0nc71p811nk1fc159khrp].[sum:Yield per acre (pounds) &amp; YPA in pounds:qk])</rows>
        <cols>[federated.01x01bi0nc71p811nk1fc159khrp].[yr:Year:ok]</cols>
      </table>
      <simple-id uuid='{314DEBB2-893B-4907-9623-62D8BA194161}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Tree Nut Variety'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.01x01bi0nc71p811nk1fc159khrp].[none:Table Name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01x01bi0nc71p811nk1fc159khrp].[none:Table Name:nk]</field>
            <field>[federated.01x01bi0nc71p811nk1fc159khrp].[yr:Year:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8D0BA26D-8668-4286-8D43-8BC20ED03FB2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Tree Nut Variety' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
